---
title: "Deskriptives"
execute:
  echo: false
  warning: false
---

```{r}
#| include: false
library(tidyverse)
library(ggplot2)
library(reactable)
source("config/viz_config.R")
source("R/quarto-utils.R")
ggplot2::theme_set(theme_ts) # defined in viz_config

placeholder_plot <- ggplot(tibble::tibble(x = 1:3, y = 4:6), aes(x = x, y = y)) +
  geom_blank()+
  annotate("text", x = 2, y = 5, label = "PLATZHALTER PLOT", size = 16)+
  labs(title = "Platzhalter")

ts_col <- "#b5c948" 
tn_cfg <- readr::read_rds("config/tn_cfg.rds")
tn <- readr::read_rds("data/cleaned/tn.rds")

tn_data <- tn$data

og <- readr::read_rds("data/cleaned/og.rds")
og_data <- og$data %>% 
  mutate(anzahl_insg = anzahl_tn + anzahl_ma_leitung)

# choices for some reordering 
og_choices <- readr::read_csv("data/meta/og_choices.csv")
```

# Überblick

### Ortsgruppen

-   `{r} og_data$og_name %>% unique() %>% length()`[^1]
-   `{r} tn_data$og_name %>% unique() %>% length()`[^2]

[^1]: Anzahl verschiedener Werte bei den Antworten zur Frage "Wie heißt deine Ortsgruppe" im Ortsgruppen-Fragebogen

[^2]: Anzahl verschiedener Werte bei den Antworten zur Frage `{r} I(fmt_source(tn_cfg$Q_OG_NAME, "tn"))`

### Aktive 

```{r}
tn_tn <- nrow(tn_data)
tn_og <- sum(og_data$anzahl_tn, na.rm = T)

leitung_og <- sum(og_data$anzahl_ma_leitung, na.rm = T)
insgesamt_og <- sum(og_data$anzahl_insg, na.rm = T)
```

Bei TEN SING sind zwischen `{r} min(tn_tn, tn_og)` und `{r} max(tn_tn, tn_og)` Teilnehmer\*innen engagiert.

In den Ortsgruppen gibt es insgesamt `{r} leitung_og` Personen, die entweder für TEN SING arbeiten oder in der Leitung der Ortsgruppe engagiert sind.

Insgesamt sind in den Ortsgruppen von TEN SING `{r} insgesamt_og` Personen aktiv.

::: {.callout-note collapse="true"}
## Datenquelle

| Fragebogen                 | Teilnehmer\*innen | Leitung und Mitarbeitende | Insgesamt                                 |
|----------------------------|-------------------|---------------------------|-------------------------------------------|
| `{r} fmt_fragebogen("tn")` | `{r} tn_tn`[^3]   | *nicht abgefragt*         | *nicht errechenbar*                       |
| `{r} fmt_fragebogen("og")` | `{r} tn_og`       | `{r} leitung_og`          | `{r} sum(og_data$anzahl_insg, na.rm = T)` |

: Anzahl Aktive {#tbl-summary}
:::

[^3]: Anzahl der Antworten auf den `{r} I(fmt_fragebogen(type = "tn"))`

# Landesverbände

```{r}
og_region_df <- og_data %>% 
  select(og_region, og_name) %>% 
  mutate(TN = "TN") %>% 
  dplyr::full_join(tn_data %>% distinct(og_region, og_name) %>% drop_na() %>% 
                     mutate(OG = "OG")) %>% 
  unite(col = "Datenquelle", c("OG", "TN"), na.rm = TRUE, sep = ", ") %>% 
  rename(Region = og_region,
         `Ortsgruppe` = og_name)

og_region_agg <- og_region_df %>% 
  ungroup() %>% 
  count(Region, name = "Anzahl Ortsgruppen") %>% 
  arrange(-`Anzahl Ortsgruppen`)

reactable(og_region_agg, details = function(index) {
  region_data <- og_region_df[og_region_df$Region == og_region_agg$Region[index], ]
  region_data <- region_data %>% select(-Region)
  htmltools::div(style = "padding: 1rem",
    reactable(region_data, outlined = TRUE)
  )
})

```

### Teilnehmer\*innen

```{r}
# TODO map OG to Landesverbände
tn_data %>% 
  ggplot(aes(x = og_region)) + 
  geom_bar(fill = ts_col)+
  coord_flip()+
  labs(x = NULL)
```

# Ortsgruppen

```{r}
og_n <- og_data$og_name %>% unique() %>% length()
og_tn_n <- tn_data$og_name %>% unique() %>% length()

if (og_n == og_tn_n) {
  text <- sprintf("Es gibt %i Ortsgruppen bei TEN SING.", og_n)
} else {
  text <- sprintf("Es zwischen %i und %i Ortsgruppen bei TEN SING.", min(c(og_n, og_tn_n)), max(c(og_n, og_tn_n))) # TODO 
}
```

`{r} text`

```{r}

```


::: {.callout-note collapse="true"}
## Liste nach Ortsgruppen-Fragebogen

```{r}
og_list <- og_data$og_name %>% sort() %>% paste(collapse = ", ")

```

`{r} og_list`
:::

::: {.callout-note collapse="true"}
## Liste nach Teilnehmer\*innen-Fragebogen

```{r}
#| results: asis
og_list <- tn_data$og_name_clean %>% unique() %>% sort() %>% paste(collapse = ", ")

```

`{r} og_list`
:::

## Größe

::: panel-tabset
## Alle

Hier wird die Anzahl aller Aktiven betrachtet. Diese ist definiert als **Summe von Teilnehmer\*innen und Leitung und Mitarbeitenden**.

Im Durchschnitt hat eine TenSing-Ortsgruppe `{r} mean(og_data$anzahl_insg, na.rm = T) %>% round()` Aktive. Dabei ist die Spannbreite recht groß. Die kleinste Ortsgruppe hat `{r} min(og_data$anzahl_insg, na.rm = T)` Aktive, die größte widerrum `{r} max(og_data$anzahl_insg, na.rm = T)` Aktive.

```{r}
ggplot(og_data, aes(x = anzahl_insg))+
    geom_histogram(fill = ts_col)+
    geom_vline(xintercept = mean(og_data$anzahl_insg, na.rm = TRUE), color = RED, linetype = 2)+
  geom_text(x = mean(og_data$anzahl_insg, na.rm = TRUE), hjust = -0.1, y = 5, label = paste("Mittelwert =", mean(og_data$anzahl_insg, na.rm = TRUE) %>% round(2)))+
    labs(x = "Anzahl Aktive", y = "Anzahl Gruppen", title = "Anzahl der Aktiven")
```

## Teilnehmer\*innen

Hier wird die Anzahl der **Teilnehmer\*innen** betrachtet: Im Durchschnitt hat eine TenSing-Ortsgruppe `{r} mean(og_data$anzahl_tn, na.rm = T) %>% round()` Teilnehmer\*innen (TN). Dabei ist die Spannbreite recht groß. Die kleinste Ortsgruppe hat `{r} min(og_data$anzahl_tn, na.rm = T)` TN, die größte widerrum `{r} max(og_data$anzahl_tn, na.rm = T)` TN.

```{r}
ggplot(og_data, aes(x = anzahl_tn))+
    geom_histogram(fill = ts_col)+
    geom_vline(xintercept = mean(og_data$anzahl_tn, na.rm = TRUE), color = RED, linetype = 2)+
  geom_text(x = mean(og_data$anzahl_tn, na.rm = TRUE), nudge_x = 1, y = 5, label = paste("Mittelwert =", mean(og_data$anzahl_tn, na.rm = TRUE) %>% round(2)))+
    labs(x = "Anzahl Teilnehmer*innen", y = "Anzahl Gruppen", title = "Anzahl der Teilnehmer*innen")
```

## Mitarbeitende / Leitung

```{r}
ggplot(og_data, aes(x = anzahl_ma_leitung))+
    geom_histogram(fill = ts_col)+
    geom_vline(xintercept = mean(og_data$anzahl_ma_leitung, na.rm = TRUE), color = RED, linetype = 2)+
  geom_text(x = mean(og_data$anzahl_ma_leitung, na.rm = TRUE),  nudge_x = -0.1, y = 5, label = paste("Mittelwert =", mean(og_data$anzahl_ma_leitung, na.rm = TRUE) %>% round(2)))+
    labs(x = "Anzahl Mitarbeitende/Leitung", y = "Anzahl Gruppen", title = "Anzahl der Mitarbeitenden/Leitung")
```
:::

::: {.callout-note collapse="true"}
## Klicken für Interpretationshilfe

Die Grafik zeigt auf der waagerechten Achse die Gruppengröße und auf der senkrechten Achse, wie viele Gruppen diese Gruppengröße haben. Die gestrichelte Linie zeigt die mittlere Gruppengröße an (Mittelwert).
:::

## Geschlecht

::: panel-tabset
## Alle

```{r}
gender_all <- og$long$gender_by_participant_type %>% 
  group_by(og_id, gender) %>% 
  summarize(n = sum(n))

og$long$gender_by_participant_type %>% 
  group_by(gender, person_type) %>% 
  summarize(n = sum(n)) %>% 
  mutate(label = paste("n =", n)) %>% 
  ggplot(aes(x = gender, y = n, fill = person_type, label = label))+
    geom_col(position = "stack")+
    geom_label(
      position = position_stack(vjust = 0.5),
      size = 3, fontface = "bold",
      ## turn into white box without outline
      fill = "white"
    ) +
    theme(legend.position = "bottom")+
    labs(fill = NULL, x = NULL, title = "Geschlecht")+
    scale_fill_manual(values = cols_4)

```

## Mitarbeitende (inkl. Leitung)

```{r}
placeholder_plot
```

## Teilnehmende

```{r}
placeholder_plot
```
:::

## Alter

::: panel-tabset
## Alle

```{r}
alter_by_person <- og$long$alter_by_participant_type

# for reordering
alter_choices <- og_choices %>% 
  filter(label %in% c(alter_by_person$alter %>% unique())) %>% 
  mutate(order = 1:n()) %>% 
  select(label, order)

color_values <- set_names(cols_4, alter_choices$label)

alter_by_person %>% 
  left_join(alter_choices, by = c("alter" = "label")) %>% 
  group_by(person_type) %>% 
  mutate(person_n = sum(n, na.rm = TRUE)) %>% 
  group_by(person_type, alter, order, person_n) %>% 
  summarize(n = sum(n, na.rm = TRUE)) %>% 
  mutate(perc = round(n * 100 / person_n, 2),
         label = paste0(n, "\n", perc, "%"))  %>%
  ungroup() %>% 
  arrange(person_type, order) %>% 
  ggplot()+
    geom_col(aes(y = person_type, x = n, group = fct_reorder(alter, -order), stat = "identity", fill = alter), position = "stack")+
    theme(legend.position = "bottom")+
    labs(fill = NULL, x = NULL, y = NULL, title = "Anzahl Aktive nach Altersgruppen")+
  geom_label(
      aes(y = person_type, x = n, label = label),
      position = position_stack(vjust = 0.5),
      size = 3, fontface = "bold",
      ## turn into white box without outline
      fill = "white"
    ) +
  scale_fill_manual(values = color_values, breaks = og_choices$label)+
  guides(fill = guide_legend(nrow = 2))
```

## Mitarbeitende (inkl. Leitung)

```{r}
placeholder_plot
```

## Teilnehmende

```{r}
placeholder_plot
```
:::
